// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  lastname  String?
  username  String   @unique
  password  String
  role      String   @default("user")
  dni      String   @unique
  isEmployee Boolean  @default(false)
  country   String
  codePhone String
  phone     String
  active   Boolean  @default(false)
  credit    Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Referreal Referreal[]
  CreditCard CreditCard[]
}


model Referreal {
  id        String   @id @default(cuid())
  code      String   
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  active    Boolean  @default(false)
  nameReferreal String
  lastnameReferreal String
  emailReferreal String
  phoneReferreal String
  dniReferreal String
  typePaid     String @default("credit")
  mountPaid    Float  @default(0)
  positionReferreal String
  paid     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CreditCard {
  id        String   @id @default(cuid())
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  cardNumber String
  cardName   String
  mount     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
